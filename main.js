(()=>{var t={484:function(t){t.exports=function(){"use strict";var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",a="hour",o="day",c="week",u="month",d="quarter",h="year",l="date",p="Invalid Date",f=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,v=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,m={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var e=["th","st","nd","rd"],n=t%100;return"["+t+(e[(n-20)%10]||e[n]||e[0])+"]"}},y=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},g={s:y,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?"+":"-")+y(r,2,"0")+":"+y(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,u),s=n-i<0,a=e.clone().add(r+(s?-1:1),u);return+(-(r+(n-i)/(s?i-a:a-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:u,y:h,w:c,d:o,D:l,h:a,m:s,s:i,ms:r,Q:d}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},$="en",w={};w[$]=m;var M="$isDayjsObject",b=function(t){return t instanceof E||!(!t||!t[M])},S=function t(e,n,r){var i;if(!e)return $;if("string"==typeof e){var s=e.toLowerCase();w[s]&&(i=s),n&&(w[s]=n,i=s);var a=e.split("-");if(!i&&a.length>1)return t(a[0])}else{var o=e.name;w[o]=e,i=o}return!r&&i&&($=i),i||!r&&$},D=function(t,e){if(b(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new E(n)},x=g;x.l=S,x.i=b,x.w=function(t,e){return D(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var E=function(){function m(t){this.$L=S(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[M]=!0}var y=m.prototype;return y.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(x.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match(f);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},y.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},y.$utils=function(){return x},y.isValid=function(){return!(this.$d.toString()===p)},y.isSame=function(t,e){var n=D(t);return this.startOf(e)<=n&&n<=this.endOf(e)},y.isAfter=function(t,e){return D(t)<this.startOf(e)},y.isBefore=function(t,e){return this.endOf(e)<D(t)},y.$g=function(t,e,n){return x.u(t)?this[e]:this.set(n,t)},y.unix=function(){return Math.floor(this.valueOf()/1e3)},y.valueOf=function(){return this.$d.getTime()},y.startOf=function(t,e){var n=this,r=!!x.u(e)||e,d=x.p(t),p=function(t,e){var i=x.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(o)},f=function(t,e){return x.w(n.toDate()[t].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},v=this.$W,m=this.$M,y=this.$D,g="set"+(this.$u?"UTC":"");switch(d){case h:return r?p(1,0):p(31,11);case u:return r?p(1,m):p(0,m+1);case c:var $=this.$locale().weekStart||0,w=(v<$?v+7:v)-$;return p(r?y-w:y+(6-w),m);case o:case l:return f(g+"Hours",0);case a:return f(g+"Minutes",1);case s:return f(g+"Seconds",2);case i:return f(g+"Milliseconds",3);default:return this.clone()}},y.endOf=function(t){return this.startOf(t,!1)},y.$set=function(t,e){var n,c=x.p(t),d="set"+(this.$u?"UTC":""),p=(n={},n[o]=d+"Date",n[l]=d+"Date",n[u]=d+"Month",n[h]=d+"FullYear",n[a]=d+"Hours",n[s]=d+"Minutes",n[i]=d+"Seconds",n[r]=d+"Milliseconds",n)[c],f=c===o?this.$D+(e-this.$W):e;if(c===u||c===h){var v=this.clone().set(l,1);v.$d[p](f),v.init(),this.$d=v.set(l,Math.min(this.$D,v.daysInMonth())).$d}else p&&this.$d[p](f);return this.init(),this},y.set=function(t,e){return this.clone().$set(t,e)},y.get=function(t){return this[x.p(t)]()},y.add=function(r,d){var l,p=this;r=Number(r);var f=x.p(d),v=function(t){var e=D(p);return x.w(e.date(e.date()+Math.round(t*r)),p)};if(f===u)return this.set(u,this.$M+r);if(f===h)return this.set(h,this.$y+r);if(f===o)return v(1);if(f===c)return v(7);var m=(l={},l[s]=e,l[a]=n,l[i]=t,l)[f]||1,y=this.$d.getTime()+r*m;return x.w(y,this)},y.subtract=function(t,e){return this.add(-1*t,e)},y.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||p;var r=t||"YYYY-MM-DDTHH:mm:ssZ",i=x.z(this),s=this.$H,a=this.$m,o=this.$M,c=n.weekdays,u=n.months,d=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},l=function(t){return x.s(s%12||12,t,"0")},f=d||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r};return r.replace(v,(function(t,r){return r||function(t){switch(t){case"YY":return String(e.$y).slice(-2);case"YYYY":return x.s(e.$y,4,"0");case"M":return o+1;case"MM":return x.s(o+1,2,"0");case"MMM":return h(n.monthsShort,o,u,3);case"MMMM":return h(u,o);case"D":return e.$D;case"DD":return x.s(e.$D,2,"0");case"d":return String(e.$W);case"dd":return h(n.weekdaysMin,e.$W,c,2);case"ddd":return h(n.weekdaysShort,e.$W,c,3);case"dddd":return c[e.$W];case"H":return String(s);case"HH":return x.s(s,2,"0");case"h":return l(1);case"hh":return l(2);case"a":return f(s,a,!0);case"A":return f(s,a,!1);case"m":return String(a);case"mm":return x.s(a,2,"0");case"s":return String(e.$s);case"ss":return x.s(e.$s,2,"0");case"SSS":return x.s(e.$ms,3,"0");case"Z":return i}return null}(t)||i.replace(":","")}))},y.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},y.diff=function(r,l,p){var f,v=this,m=x.p(l),y=D(r),g=(y.utcOffset()-this.utcOffset())*e,$=this-y,w=function(){return x.m(v,y)};switch(m){case h:f=w()/12;break;case u:f=w();break;case d:f=w()/3;break;case c:f=($-g)/6048e5;break;case o:f=($-g)/864e5;break;case a:f=$/n;break;case s:f=$/e;break;case i:f=$/t;break;default:f=$}return p?f:x.a(f)},y.daysInMonth=function(){return this.endOf(u).$D},y.$locale=function(){return w[this.$L]},y.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},y.clone=function(){return x.w(this.$d,this)},y.toDate=function(){return new Date(this.valueOf())},y.toJSON=function(){return this.isValid()?this.toISOString():null},y.toISOString=function(){return this.$d.toISOString()},y.toString=function(){return this.$d.toUTCString()},m}(),L=E.prototype;return D.prototype=L,[["$ms",r],["$s",i],["$m",s],["$H",a],["$W",o],["$M",u],["$y",h],["$D",l]].forEach((function(t){L[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),D.extend=function(t,e){return t.$i||(t(e,E,D),t.$i=!0),D},D.locale=S,D.isDayjs=b,D.unix=function(t){return D(1e3*t)},D.en=w[$],D.Ls=w,D.p={},D}()}},e={};function n(r){var i=e[r];if(void 0!==i)return i.exports;var s=e[r]={exports:{}};return t[r].call(s.exports,s,s.exports,n),s.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";function t(t){try{return function(t){const e=t.replace(/^\s*\[|\]\s*$/g,"").trim().split(/,\s*/);if(2!==e.length)throw new Error("Некорректный формат ввода");const n=e.map((t=>t.replace(/−/g,"-"))),r=parseFloat(n[0]),i=parseFloat(n[1]);if(Number.isNaN(r)||Number.isNaN(i))throw new Error("Некорректные значения широты и долготы");return{latitude:r,longitude:i}}(t)}catch(t){return console.error(t.message),t.message}}class e{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t,this.init()}init(){this.drawUi(),this.events()}drawUi(){this.container.innerHTML='\n      <div id="modal" class="modal">\n        <div class="modal-content">\n          <h4>Что-то пошло не так</h4>\n          <p>К сожалению, нам не удалось определить Ваше местоположение, пожалуйста, дайте разрешение на использование геолокации, либо введите координаты вручную</p>\n          <label for="geo">Широта и долгота через запятую</label>\n          <input name="geo" type="text" id="geo-input" class="geo-input" placeholder="51.50851, −0.12572" />\n          <div class="btn-modal-wrapper">\n            <button class="close-btn">Отмена</button>\n            <button class="add-geo">Ok</button>\n          </div>\n        </div>\n        <div class="error-container"></div>\n      </div>\n    ',this.modal=this.container.querySelector("#modal"),this.addButton=this.container.querySelector(".add-geo"),this.closeButton=this.container.querySelector(".close-btn"),this.input=this.container.querySelector("#geo-input"),this.error=this.container.querySelector(".error-container")}events(){this.input.addEventListener("click",(()=>{this.input.value="",this.hideError()}))}closeModal(){this.modal.remove()}showError(t){this.error.textContent=t,this.error.style.display="flex"}hideError(){this.error.style.display="none"}getCoords(){return this.coords}waitForOk(){return new Promise((e=>{this.addButton.addEventListener("click",(()=>{const n=this.input.value;if(n){const r=t(n);"string"==typeof r?this.showError(r):(this.coords=r,this.modal.style.display="none",e(this.getCoords()))}else this.showError("Пожалуйста, введите ваши координаты")})),this.closeButton.addEventListener("click",(()=>{this.closeModal(),e(null)}))}))}}class r{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t,this.init()}init(){this.drawUi(),this.events()}drawUi(){this.container.innerHTML='\n      <div id="modal" class="modal">\n        <div class="modal-content">\n          <h4>Что-то пошло не так</h2>\n          <p>Пожалуйста, дайте разрешение на использование аудио- или видеозаписи, либо используйте другой браузер</p>\n          <p>\n            Чтобы изменить настройки разрешений для данного сайта, следуйте этим шагам:\n\n            Откройте страницу сайта, для которого вы хотите изменить разрешения.\n            Найдите значок "замка" или "восклицательного знака" слева от адресной строки браузера.\n            Нажмите на этот значок и выберите "Настройки сайта" или "Разрешения" (зависит от браузера).\n            Найдите настройку микрофона/камеры и измените ее на "Разрешить".\n            Закройте настройки и обновите страницу. Теперь сайт должен иметь доступ к микрофону/камере.\n          </p>\n          <div class="btn-modal-wrapper">\n            <button class="close-btn">Закрыть</button>\n          </div>\n        </div>\n      </div>\n    '}events(){document.querySelector(".close-btn").addEventListener("click",(()=>this.closeModal()))}closeModal(){this.container.innerHTML=""}}var i=n(484),s=n.n(i);class a{constructor(t,e,n,r){this.text=e,this.geo=t,this.mediaUrl=n,this.constraints=r,this.post=null,this.postsContainer=null,this.init()}init(){this.postsContainer=document.querySelector(".posts"),this.createPostMedia()}createPostMedia(){if(this.createPost(),this.mediaUrl){const{video:t}=this.constraints,e=t?"video":"audio",n=document.createElement(e);n.src=this.mediaUrl,n.controls=!0,n.crossOrigin="anonymous",this.post.querySelector(".post-content").appendChild(n)}this.postsContainer.appendChild(this.post)}createPost(){this.post=document.createElement("div"),this.post.classList.add("post"),this.post.innerHTML=`\n    <div class="post-date">${s()(Date.now()).format("DD.MM.YY HH:mm")}</div>\n    <div class="post-content">\n      \x3c!-- Здесь будет содержимое поста (текст, аудио или видео) --\x3e\n      <p class="text-post">${this.text}</p>\n    </div>\n    <div class="geodata">\n      [${this.geo.latitude}, ${this.geo.longitude}] \n      <span class="geodata-icon"></span>\n    </div>\n  `}}class o{constructor(t){this.container=t,this.textarea=null,this.modalMedia=null,this.timerInterval=null}init(){this.drawUi(),this.addEvents()}drawUi(){this.container.innerHTML='\n      <div class="modal-window"></div>\n      <section>\n        <h2>Лента постов</h2>\n        <div class="posts"></div>\n      \x3c!-- Посты будут добавляться здесь --\x3e\n      </section>\n      <section id="create-post">\n        <form name="post" id="post-form">\n          <div class="text-container">\n            <textarea id="post-content" rows="2" required></textarea>\n            <div class="media-button-wrapper">\n              <button class="btn audio-button" type="button"></button>\n              <button class="btn video-button" type="button"></button>\n            </div>\n            \n            <div class="media-action-wrapper">\n              <button class="btn start-media" type="button"></button>\n              <div id="timer" class="timer">00:00</div>\n              <button class="btn stop-media" type="button"></button>\n            </div>\n            \n          </div>\n        </form>\n      </section>\n    ',this.textarea=this.container.querySelector("#post-content"),this.startButton=this.container.querySelector(".start-media"),this.stopButton=this.container.querySelector(".stop-media"),this.audioButton=this.container.querySelector(".audio-button"),this.videoButton=this.container.querySelector(".video-button")}addEvents(){this.textarea.addEventListener("input",(()=>this.changeHeightTextarea())),this.textarea.addEventListener("keydown",(t=>this.addPost(t))),this.audioButton.addEventListener("click",(()=>this.writeMedia({audio:!0,video:!1}))),this.videoButton.addEventListener("click",(()=>this.writeMedia({audio:!0,video:!0}))),this.startButton.addEventListener("click",(()=>this.startRecording())),this.stopButton.addEventListener("click",(()=>this.stopRecording()))}changeHeightTextarea(){this.textarea.style.height="auto",this.textarea.style.height=`${this.textarea.scrollHeight}px`}async addPost(t){if("Enter"===t.key){t.preventDefault();const e=await this.getGeoData();e&&(this.post=new a(e,this.textarea.value),this.textarea.value="")}}async getGeoData(){if(!("geolocation"in navigator))return this.showModalGeo();try{const t=await new Promise(((t,e)=>{navigator.geolocation.getCurrentPosition((e=>t(e.coords)),(t=>e(t)))}));return{latitude:t.latitude,longitude:t.longitude}}catch{return this.showModalGeo()}}showModalGeo(){return new e(this.container.querySelector(".modal-window")).waitForOk()}writeMedia(t){this.toggleMediaButtonVisibility(),this.setupMediaRecorder(t)}toggleMediaButtonVisibility(){this.container.querySelector(".media-button-wrapper").style.display="none",this.container.querySelector(".media-action-wrapper").style.display="block"}async setupMediaRecorder(t){this.startButton.disabled=!0,this.chunks=[];try{const e=await navigator.mediaDevices.getUserMedia(t);this.recorder=new MediaRecorder(e),this.recorder.addEventListener("start",(()=>console.log("start media"))),this.recorder.addEventListener("dataavailable",(t=>this.chunks.push(t.data))),this.recorder.addEventListener("stop",(()=>this.handleRecordingStop(t))),this.startButton.disabled=!1}catch{this.handleError()}}handleRecordingStop(t){this.stopTimer();const e=o.createMediaUrl(this.chunks,t);this.getGeoData().then((n=>{this.post=new a(n,this.textarea.value,e,t),this.textarea.value="",this.container.querySelector(".media-button-wrapper").style.display="block",this.container.querySelector(".media-action-wrapper").style.display="none"})).catch((t=>this.handleError(t))),this.chunks=[]}handleError(){this.startButton.disabled=!1,this.modalMedia=new r(this.container.querySelector(".modal-window"))}static createMediaUrl(t,e){const n=e.video?"video/webm":"audio/ogg; codecs=opus",r=new Blob(t,{type:n});return URL.createObjectURL(r)}startRecording(){this.recorder&&(this.startButton.disabled=!0,this.stopButton.disabled=!1,this.recorder.start(),this.startTimer())}stopRecording(){this.startButton.disabled=!1,this.stopButton.disabled=!0,this.recorder&&"inactive"!==this.recorder.state&&this.recorder.stop()}startTimer(){let t=0,e=0;const n=document.getElementById("timer");n.textContent="00:00",this.timerInterval=setInterval((()=>{t+=1,60===t&&(e+=1,t=0);const r=String(e).padStart(2,"0"),i=String(t).padStart(2,"0");n.textContent=`${r}:${i}`}),1e3)}stopTimer(){clearInterval(this.timerInterval),this.container.querySelector("#timer").textContent="00:00"}}new o(document.getElementById("timeline-container")).init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,